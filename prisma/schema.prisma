generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String    @unique @db.VarChar(100)
  password String    @db.VarChar(100)
  name     String    @db.VarChar(100)
  token    String?   @db.VarChar(100)
  contacts Contact[]
  blogs    Blog[]

  @@map("users")
}

model Contact {
  id         Int       @id @default(autoincrement())
  first_name String    @db.VarChar(100)
  last_name  String?   @db.VarChar(100)
  email      String?   @db.VarChar(200)
  phone      String?   @db.VarChar(20)
  username   String    @db.VarChar(100)
  addresses  Address[]
  user_id    Int
  user       User      @relation(fields: [user_id], references: [id])

  @@index([username], map: "contacts_username_idx")
  @@map("contacts")
}

model Address {
  id          Int     @id @default(autoincrement())
  street      String? @db.VarChar(255)
  city        String? @db.VarChar(100)
  province    String? @db.VarChar(100)
  country     String  @db.VarChar(100)
  postal_code String  @db.VarChar(10)
  contact_id  Int
  contact     Contact @relation(fields: [contact_id], references: [id])

  @@index([contact_id], map: "addresses_contact_id_fkey")
  @@map("addresses")
}

model Blog {
  id            Int      @id @default(autoincrement())
  title         String   @db.VarChar(100)
  slug          String   @unique @db.VarChar(120)
  content       String   @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  author_id     Int
  author        User     @relation(fields: [author_id], references: [id])

  @@index([author_id])
  @@map("blogs")
}
